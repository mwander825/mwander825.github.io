[{"C:\\Users\\Michael\\Documents\\ReactProjects\\portfolio\\src\\App.js":"1","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\index.js":"2","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\App.js":"3","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\components\\Terminal.jsx":"4","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\components\\UserLog.jsx":"5","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\Rooms.js":"6"},{"size":824,"mtime":1611207853039,"results":"7","hashOfConfig":"8"},{"size":218,"mtime":1610491616266,"results":"9","hashOfConfig":"10"},{"size":1839,"mtime":1622866086426,"results":"11","hashOfConfig":"10"},{"size":4092,"mtime":1622866187797,"results":"12","hashOfConfig":"10"},{"size":2384,"mtime":1622866171438,"results":"13","hashOfConfig":"10"},{"size":1051,"mtime":1612686928616,"results":"14","hashOfConfig":"10"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},"4809en",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1uzu89k",{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\Michael\\Documents\\ReactProjects\\portfolio\\src\\App.js",["35"],"import React from 'react';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport Terminal from './components/Terminal'\n\nfunction App(props) {\n  const PageContext = React.createContext('game')\n  return (\n    <BrowserRouter basename=\"/\">\n      <div id=\"App\">\n        <div className=\"header\">\n          <span className=\"navButton\"><Link to=\"about\">About</Link></span>\n          <span className=\"navButton\"><Link to=\"projects\">Projects</Link></span>\n          <span className=\"navButton\"><Link to=\"/\">Game</Link></span>\n          <span className=\"navButton\"><Link to=\"stuff\">Stuff</Link></span>\n          <span className=\"navButton\"><Link to=\"Writings\">Writings</Link></span>\n        </div>\n        <Route component={Terminal}/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n",["36","37"],"C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\index.js",[],["38","39"],"C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\App.js",["40","41","42","43","44","45","46","47","48","49"],"import React, { useEffect, useState, setState } from 'react';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport Terminal from './components/Terminal'\n\nfunction App(props) {\n  //const [pageContext, setPageContext] = React.createContext('game')\n  //const [roomContext, setroomContext] = React.createContext('break_unlit')\n  \n  const [pageState, setPageState] = useState(\"game\");\n  const PageContext = React.createContext({\n    pageState: \"game\",\n    setPageState: () => {}\n  });\n\n  const [roomState, setRoomState] = useState(\"break_unlit\")\n  const RoomContext = React.createContext({\n    roomState: \"break_unlit\",\n    setRoomState: () => {}\n  });\n\n  const [flags, setFlags] = useState(Array(3).fill(0))\n  const FlagsContext = React.createContext({\n    flags: Array(3).fill(0),\n    setFlags: () => {}\n  });\n\n  const PageUpdater = () => {\n    const {pageState, setPageState} = React.useContext(PageContext)\n\n  }\n  const pageValue = {pageState, setPageState};\n  const roomValue = {roomState, setRoomState}\n  return (\n    <PageContext.Provider value={PageContext}>\n      <RoomContext.Provider value={RoomContext}>\n        <BrowserRouter basename=\"/\">\n          <div id=\"App\">\n            <div className=\"header\">\n              <span className=\"navButton\"><Link to=\"about\">About</Link></span>\n              <span className=\"navButton\"><Link to=\"projects\">Projects</Link></span>\n              <span className=\"navButton\"><Link to=\"/\">Game</Link></span>\n              <span className=\"navButton\"><Link to=\"stuff\">Stuff</Link></span>\n              <span className=\"navButton\"><Link to=\"writings\">Writings</Link></span>\n            </div>\n            <Route component={Terminal}/>\n          </div>\n        </BrowserRouter>\n      </RoomContext.Provider>\n    </PageContext.Provider>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\components\\Terminal.jsx",["50","51","52","53"],"import React, { useEffect, useState, setState } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import CommandParser from \"./UserLog.jsx\";\r\n//import App from \"../App.js\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rooms from \"../Rooms.js\"\r\nimport \"../App.css\";\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        color: \"white\",\r\n        fontFamily: 'Courier New'\r\n    }\r\n}))\r\n\r\nfunction Terminal(props) {\r\n    const TextFieldRef = React.useRef(null);\r\n    const termstyle = {\r\n        margin: \"0 auto\",\r\n        top: \"70px\",\r\n        width: \"33%\",\r\n        height: \"700px\",\r\n        color: \"white\",\r\n        fontFamily: 'Courier New',\r\n        display: \"block\",\r\n        position: \"relative\",\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n        backgroundColor: \"black\"\r\n    };\r\n\r\n    // Array destructuring\r\n    const [userCommand, setUserCommand] = useState(\"\")\r\n    const [userLog, setUserLog] = useState([])\r\n    const [commandCount, setCommandCount] = useState(0)\r\n    \r\n    // Monitor value of the command input Textfield\r\n    const changeHandler = (value) => {\r\n        setUserCommand(value)\r\n        TextFieldRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\"\r\n          });\r\n    }\r\n    \r\n    const enterHandler = (e) => {\r\n        // '===' : things compared must be of the same type\r\n        if (e.key === 'Enter'){\r\n            console.log(\"Enter key pressed\")\r\n\r\n            // Update the amount of commands input\r\n            setCommandCount(commandCount + 1)\r\n\r\n            // .push() mutates original array, don't use to update state\r\n            // instead use ... (spread operator)\r\n            setUserLog([...userLog, {ind: commandCount, command: userCommand}])\r\n            \r\n            // Clear userCommand value\r\n            setUserCommand(\"\")\r\n\r\n            // Scroll to the TextField on command input?\r\n            TextFieldRef.current.scrollIntoView(false)\r\n        }\r\n    }\r\n\r\n    // for loop?\r\n    // .map works like map in python kind of\r\n    let children = userLog.map((val) => {\r\n        return (\r\n            <div>\r\n                <span \r\n                className=\"log\"\r\n                key={\"clog\" + val.ind}\r\n                >\r\n                    {\">\" + (val.command)}\r\n                </span>\r\n                \r\n            </div>\r\n        )\r\n        //<RoomContext.Provider>\r\n        //<CommandParser ind={val.ind} commandString={val.command}/>\r\n        //</RoomContext.Provider>\r\n    });\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <div style={termstyle}>\r\n            <div className=\"log-wrapper\">\r\n                <span className=\"log-narrans\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, \r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \r\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                </span>\r\n                {children}\r\n            </div>\r\n            <TextField\r\n            value={userCommand}\r\n            ref={TextFieldRef}\r\n            onKeyPress={(event) => enterHandler(event)}\r\n            onChange={(event) => changeHandler(event.target.value)}\r\n            fullWidth\r\n            InputProps={{\r\n                classes: { root: classes.root },\r\n                disableUnderline: true,\r\n                startAdornment:\r\n                <InputAdornment\r\n                classes = {{root: classes.root}}\r\n                position = \"start\"\r\n                >\r\n                {'>'}</InputAdornment>\r\n            }}\r\n            />\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Terminal;","C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\components\\UserLog.jsx",["54"],"import React, { useEffect, useState, setState } from 'react';\r\nimport Rooms from \"../Rooms.js\";\r\nimport Items from \"../Items.js\";\r\nimport {PageContext, RoomContext, FlagsContext} from \"../App.js\";\r\n\r\nfunction CommandParser(props) {\r\n    const {room, setRoom} = React.useContext(RoomContext)\r\n    const {flags, setFlags} = React.useContext(FlagsContext)\r\n    const wordRegex = /\\w+/g\r\n    const primString = String(props.commandString)\r\n    const tokens = primString.match(wordRegex)\r\n    \r\n    var messageReturn;\r\n    var commandResult;\r\n    console.log(primString)\r\n    console.log(tokens)\r\n    \r\n    mutableRooms = Rooms;\r\n    mutableItems = Items;\r\n    const [inventory, setInventory] = useState([])\r\n\r\n    if (tokens === null) {\r\n        messageReturn = \"Type something next time.\"\r\n    }\r\n    else if (tokens.length > 1) {\r\n        switch(tokens[0]) {\r\n            case \"look\":\r\n                break;\r\n            case \"go\":\r\n                break;\r\n            case \"use\":\r\n                if (tokens.length  > 2) {\r\n                }\r\n                else {\r\n                    if(mutableRooms[room].items.includes(tokens[1])){\r\n                        commandResult = mutableItems[tokens[1]]\r\n                        if commandResult[]\r\n                        messageReturn = commandResult.tokens[0]\r\n                    }\r\n                    else {\r\n                        messageReturn = \"There is no\" + tokens[1] + \"here.\"\r\n                    }\r\n                }\r\n                break;\r\n            case \"take\":\r\n                break;\r\n            default:\r\n                break; \r\n        }\r\n    }\r\n\r\n    else if (tokens.length <= 1) {\r\n        switch(String(tokens[0])) {\r\n            case \"help\":\r\n                messageReturn = \"HELP\"\r\n                break;\r\n            case \"look\":\r\n                messageReturn = Rooms[room].look\r\n                break;\r\n            case \"inventory\":\r\n                messageReturn = \"Your infinitely deep breast pocket contains...\";\r\n                break;\r\n            default:\r\n                messageReturn = \"Sorry, I don't understand.\"\r\n                break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <span \r\n        className=\"log-narrans\"\r\n        key={\"nlog\" + props.ind}\r\n        >\r\n            {messageReturn}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default CommandParser;",["55","56"],"C:\\Users\\Michael\\Documents\\ReactProjects\\website\\src\\Rooms.js",["57"],"export default\r\n{\r\n    \"0\": {\r\n        \"break\": {\r\n            items: [\"switch\"],\r\n            north: [],\r\n            south: [],\r\n            east: [],\r\n            west: [],\r\n            look: \"Through the darkness you can barely make out what appears to be a light switch on the wall.\"\r\n        },\r\n        \"break_hallway\": {\r\n            items: [\"poster\", \"whiteboard\", \"marker\", \"eraser\"],\r\n            north: [],\r\n            south: [\"break_lit\"],\r\n            east: [],\r\n            west: [],\r\n            look: \"\"\r\n        }\r\n    },\r\n    \"1\": {\r\n        \"break\": {\r\n            items: [\"pen\", \"paper\", \"clipboard\", \"switch\"],\r\n            north: [\"break_hallway\"],\r\n            south: [],\r\n            east: [],\r\n            west: [],\r\n            look: \"You are standing in a break room.\"\r\n        },\r\n        \"break_hallway\": {\r\n            items: [\"poster\", \"whiteboard\", \"marker\", \"eraser\"],\r\n            north: [],\r\n            south: [\"break_lit\"],\r\n            east: [],\r\n            west: [],\r\n            look: \"\"\r\n        }\r\n    }\r\n}",{"ruleId":"58","severity":1,"message":"59","line":7,"column":9,"nodeType":"60","messageId":"61","endLine":7,"endColumn":20},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"69","line":1,"column":38,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"58","severity":1,"message":"70","line":22,"column":10,"nodeType":"60","messageId":"61","endLine":22,"endColumn":15},{"ruleId":"58","severity":1,"message":"71","line":22,"column":17,"nodeType":"60","messageId":"61","endLine":22,"endColumn":25},{"ruleId":"58","severity":1,"message":"72","line":23,"column":9,"nodeType":"60","messageId":"61","endLine":23,"endColumn":21},{"ruleId":"58","severity":1,"message":"73","line":28,"column":9,"nodeType":"60","messageId":"61","endLine":28,"endColumn":20},{"ruleId":"58","severity":1,"message":"74","line":29,"column":12,"nodeType":"60","messageId":"61","endLine":29,"endColumn":21},{"ruleId":"58","severity":1,"message":"75","line":29,"column":23,"nodeType":"60","messageId":"61","endLine":29,"endColumn":35},{"ruleId":"58","severity":1,"message":"76","line":32,"column":9,"nodeType":"60","messageId":"61","endLine":32,"endColumn":18},{"ruleId":"58","severity":1,"message":"77","line":33,"column":9,"nodeType":"60","messageId":"61","endLine":33,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"69","line":1,"column":38,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"58","severity":1,"message":"78","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":18},{"ruleId":"58","severity":1,"message":"79","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"80","line":37,"column":28},{"ruleId":"62","replacedBy":"81"},{"ruleId":"64","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","endLine":39,"endColumn":2},"no-unused-vars","'PageContext' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"'useEffect' is defined but never used.","'setState' is defined but never used.","'flags' is assigned a value but never used.","'setFlags' is assigned a value but never used.","'FlagsContext' is assigned a value but never used.","'PageUpdater' is assigned a value but never used.","'pageState' is assigned a value but never used.","'setPageState' is assigned a value but never used.","'pageValue' is assigned a value but never used.","'roomValue' is assigned a value but never used.","'Typography' is defined but never used.","'Rooms' is defined but never used.","Parsing error: Unexpected token, expected \"(\"\n\n\u001b[0m \u001b[90m 35 | \u001b[39m                    \u001b[36mif\u001b[39m(mutableRooms[room]\u001b[33m.\u001b[39mitems\u001b[33m.\u001b[39mincludes(tokens[\u001b[35m1\u001b[39m])){\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m                        commandResult \u001b[33m=\u001b[39m mutableItems[tokens[\u001b[35m1\u001b[39m]]\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 | \u001b[39m                        \u001b[36mif\u001b[39m commandResult[]\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 | \u001b[39m                        messageReturn \u001b[33m=\u001b[39m commandResult\u001b[33m.\u001b[39mtokens[\u001b[35m0\u001b[39m]\u001b[0m\n\u001b[0m \u001b[90m 39 | \u001b[39m                    }\u001b[0m\n\u001b[0m \u001b[90m 40 | \u001b[39m                    \u001b[36melse\u001b[39m {\u001b[0m",["86"],["87"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]